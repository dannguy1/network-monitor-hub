# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name your_raspberry_pi_ip_or_domain;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2; # Enable SSL and HTTP/2
    server_name your_raspberry_pi_ip_or_domain; # e.g., 192.168.1.100 or monitor.local

    # SSL Configuration - REPLACE with your actual paths
    ssl_certificate /etc/letsencrypt/live/your_domain/fullchain.pem; 
    ssl_certificate_key /etc/letsencrypt/live/your_domain/privkey.pem;
    # Include recommended SSL parameters (e.g., from certbot or Mozilla SSL Config Generator)
    # include /etc/letsencrypt/options-ssl-nginx.conf; 
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; 

    # Logging
    access_log /var/log/nginx/network-monitor.access.log;
    error_log /var/log/nginx/network-monitor.error.log;

    # Backend API Proxy
    location /api/v1/ {
        proxy_pass http://unix:/tmp/network-monitor.sock; # Match the Gunicorn bind
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Proto https; # Explicitly set proto
    }

    # Frontend Static Files
    location / {
        root /opt/openwrt-loghub/frontend/build; # Path to React build output
        try_files $uri $uri/ /index.html; # Handle client-side routing
    }

    # Optional: Deny access to hidden files
    location ~ /\. {
        deny all;
    }
} 