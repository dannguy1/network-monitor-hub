# --- Network Monitor Environment Variables --- #

# --- General Flask Settings --- #
# REQUIRED: Set to 'production' for deployment
FLASK_CONFIG=production

# REQUIRED: Strong random string for session security & CSRF
# Generate using: openssl rand -hex 32
SECRET_KEY=Al-5Fqh84RFIItK6aSli5xC182KUWcbY1JLNtyfxsYE=

# --- Database Settings --- #
# REQUIRED: Connection string for your database.
# Production Recommendation: Use PostgreSQL instead of SQLite.
# Using the value seen in previous logs:
DATABASE_URL=postgresql://netmonitor_user:NMPassword@localhost/network_monitor_db

# --- Security --- #
# REQUIRED: Fernet key for encrypting SSH credentials.
# Generate using Python: from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())
# KEEP THIS KEY SECRET AND BACKED UP!
ENCRYPTION_KEY=Al-5Fqh84RFIItK6aSli5xC182KUWcbY1JLNtyfxsYE=

# --- CORS --- #
# OPTIONAL: Origin allowed to access the API (defaults to http://localhost:3000 if not set)
# Set this to the actual URL where your frontend is served in production.
# Example: FRONTEND_ORIGIN=http://your-monitor-domain.com
# FRONTEND_ORIGIN=

# --- AI Data Push (Optional) --- #
AI_ENGINE_ENABLED=True
AI_ENGINE_PUSH_METHOD=mqtt # Specify push method as MQTT
# Endpoint of the remote AI engine (Commented out - using MQTT)
# AI_ENGINE_ENDPOINT=
# API Key for the remote AI engine (Commented out - using MQTT)
# AI_ENGINE_API_KEY=

# --- MQTT Settings for AI Push --- #
AI_ENGINE_MQTT_HOST=localhost
AI_ENGINE_MQTT_PORT=1883
AI_ENGINE_MQTT_TOPIC_PREFIX=network_monitor/logs
# Optional MQTT Auth/TLS settings (if needed by Log-Analyzer)
# AI_ENGINE_MQTT_USERNAME=
# AI_ENGINE_MQTT_PASSWORD=
# AI_ENGINE_MQTT_TLS_ENABLED=False
# AI_ENGINE_MQTT_CA_CERTS=

# Interval (in minutes) for pushing logs (Keep existing or adjust)
AI_PUSH_INTERVAL_MINUTES=15

# --- Syslog Server (Built-in) --- #
# Port for the built-in UDP syslog server (Default: 514)
# Ensure this port is open and not used by other services (like system rsyslog)
SYSLOG_UDP_PORT=5140
SYSLOG_SERVER_IP=192.168.10.12

# --- Optional: Logging --- #
# Example: Configure logging to a file in ProductionConfig (config.py)
# PROD_LOG_FILE=/var/log/network-monitor/app.log 