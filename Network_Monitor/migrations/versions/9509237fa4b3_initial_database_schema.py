"""Initial database schema

Revision ID: 9509237fa4b3
Revises: 
Create Date: 2025-04-07 20:40:51.794743

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '9509237fa4b3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('credentials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('ssh_username', sa.String(length=128), nullable=False),
    sa.Column('encrypted_password', sa.LargeBinary(), nullable=True),
    sa.Column('encrypted_private_key', sa.LargeBinary(), nullable=True),
    sa.Column('auth_type', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('credentials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_credentials_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('ip_address', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('control_method', sa.String(length=32), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('credential_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['credential_id'], ['credentials.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('devices', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_devices_ip_address'), ['ip_address'], unique=True)
        batch_op.create_index(batch_op.f('ix_devices_name'), ['name'], unique=True)

    op.create_table('log_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('device_ip', sa.String(length=45), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('log_level', sa.String(length=50), nullable=True),
    sa.Column('process_name', sa.String(length=128), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('raw_message', sa.Text(), nullable=True),
    sa.Column('structured_data', sqlite.JSON(), nullable=True),
    sa.Column('pushed_to_ai', sa.Boolean(), nullable=True),
    sa.Column('pushed_at', sa.DateTime(), nullable=True),
    sa.Column('push_attempts', sa.Integer(), nullable=True),
    sa.Column('last_push_error', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('log_entries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_log_entries_device_id'), ['device_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_log_entries_device_ip'), ['device_ip'], unique=False)
        batch_op.create_index(batch_op.f('ix_log_entries_log_level'), ['log_level'], unique=False)
        batch_op.create_index(batch_op.f('ix_log_entries_process_name'), ['process_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_log_entries_pushed_to_ai'), ['pushed_to_ai'], unique=False)
        batch_op.create_index(batch_op.f('ix_log_entries_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('log_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_log_entries_timestamp'))
        batch_op.drop_index(batch_op.f('ix_log_entries_pushed_to_ai'))
        batch_op.drop_index(batch_op.f('ix_log_entries_process_name'))
        batch_op.drop_index(batch_op.f('ix_log_entries_log_level'))
        batch_op.drop_index(batch_op.f('ix_log_entries_device_ip'))
        batch_op.drop_index(batch_op.f('ix_log_entries_device_id'))

    op.drop_table('log_entries')
    with op.batch_alter_table('devices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_devices_name'))
        batch_op.drop_index(batch_op.f('ix_devices_ip_address'))

    op.drop_table('devices')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))

    op.drop_table('users')
    with op.batch_alter_table('credentials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_credentials_name'))

    op.drop_table('credentials')
    # ### end Alembic commands ###
